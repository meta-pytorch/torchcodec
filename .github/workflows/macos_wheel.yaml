name: Build and test MacOS

on:
  pull_request:
  push:
    branches:
      - nightly
      - main
      - release/*
    tags:
        - v[0-9]+.[0-9]+.[0-9]+-rc[0-9]+
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref_name }}-${{ github.ref_type == 'branch' && github.sha }}-${{ github.event_name == 'workflow_dispatch' }}
  cancel-in-progress: true

permissions:
  id-token: write
  contents: write

defaults:
  run:
    shell: bash -l -eo pipefail {0}

jobs:
  install-and-test:
    runs-on: macos-m1-stable
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.9']
        ffmpeg-version-for-tests: ['4.4.2', '5.1.2', '6.1.1', '7.0.1']
    if: ${{ always() }}
    steps:
      - name: Setup conda env
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          miniconda-version: "latest"
          activate-environment: test
          python-version: ${{ matrix.python-version }}
      - name: Update pip
        run: python -m pip install --upgrade pip
      - name: Install PyTorch
        run: |
          python -m pip install --pre torch --index-url https://download.pytorch.org/whl/nightly/cpu
      - name: Check out repo
        uses: actions/checkout@v3
      - name: Install compile from source dependencies
        run: |
          conda install cmake pkg-config -c conda-forge
      - name: Install test dependencies
        run: |
          python -m pip install --pre torchvision --index-url https://download.pytorch.org/whl/nightly/cpu
          # Ideally we would find a way to get those dependencies from pyproject.toml
          python -m pip install numpy pytest pillow
      - name: Install torchcodec from source, building against non-GPL FFmpeg
        run: |
          BUILD_AGAINST_ALL_FFMPEG_FROM_S3=1 pip install -e ".[dev]" --no-build-isolation
      - name: Install ffmpeg, post build
        run: |
          # Ideally we would have checked for that before installing the wheel,
          # but we need to checkout the repo to access this file, and we don't
          # want to checkout the repo before installing the wheel to avoid any
          # side-effect. It's OK.
          source packaging/helpers.sh
          assert_ffmpeg_not_installed

          conda install "ffmpeg=${{ matrix.ffmpeg-version-for-tests }}" -c conda-forge
          ffmpeg -version
      - name: Smoke test
        run: |
          python test/decoders/manual_smoke_test.py
      - name: Run Python tests
        run: |
          pytest test -vvv
